#客户端配置信息
Client {
#Client 用来定义备份哪个客户端 FD 的数据
  Name = dev-of-install-9
  #Clinet 的名称，可以在前面的 Job 中调用
  Address = 10.18.193.9
  #要备份的客户端 FD 主机的 IP 地址
  FDPort = 9102
  #与客户端 FD 通信的端口
  Catalog = MyCatalog
  #使用哪个数据库存储信息，"MyCatalog" 在主配置文件 dir 中的 MyCatalog 逻辑段中进行定义
  Password = "@!6^l~)jeH#pi%GxtB"
  #Director 端与客户端 FD 的验证密码，这个值必须与客户端 FD 配置文件 bacula-fd.conf 中密码相同
  File Retention = 60 days
  #指定保存在数据库中的记录多久循环一次，这里是 60 天，只影响数据库中的记录不影响备份的文件
  Job Retention = 6 months
  #指定 Job 的保持周期，应该大于 File Retention 指定的值
  AutoPrune = yes
  #当达到指定的保持周期时，是否自动删除数据库中的记录，yes 表示自动清除过期的 Job
}

#定义一个作业（完整备份）
Job {
    Name = "dev-of-install-9_full"
    #备份任务名称
    Type = Backup
    #定义 Job 的类型，"backup"为备份任务，可选的类型还有 restore 和 verify 等
    Level = Full
    #定义备份的级别，Incremental 为增量备份。Level 的取值可为 Full（完全备份）、Incremental（增量备份）和 Differential（差异备份），如果第一次没做完全备份，则先进行完全备份后再执行 Incremental
    Client = dev-of-install-9
    #指定要备份的客户端主机，"dev-of-install-9" 在后面新建一个单独配置文件的 Client 逻辑段中进行定义
    FileSet = dbfs
    #指定要备份的客户端数据，"dbfs" 在后面 FileSet 逻辑段中进行定义
    Schedule = dbscd
    #指定这个备份任务的执行时间策略，"dbscd" 在后面的 Schedule 逻辑段中进行了定义
    Storage = dbsd
    #指定备份数据的存储路径与介质，"dbsd" 在后面的 Storage 逻辑段中进行定义
    Messages = Standard
    Pool = dbpool
    #指定备份使用的 pool 属性，"dbpool" 在后面的 Pool 逻辑段中进行定义
    Write Bootstrap = "/opt/bacula/working/%c.bsr"
    #指定备份的引导信息路径
}

#定义一个作业（差异备份）
Job {
    Name = "dev-of-install-9_Differential"
    Type = Backup
    Level = Differential
    Client = dev-of-install-9
    FileSet = dbfs
    Schedule = dbscd
    Storage = dbsd
    Messages = Standard
    Pool = dbpool
    Rerun Failed Levels = yes
    Write Bootstrap = "/opt/bacula/working/Differential.bsr"
}

#定义一个作业（数据恢复）
Job {
  Name = "dev-of-install-9_RestoreFiles"
  Type = Restore
  Client = dev-of-install-9
  FileSet = dbfs
  Storage = dbsd
  Pool = dbpool
  Messages = Standard
  Where = /tmp
  #指定默认恢复数据到这个路径
}